DBeverの追加使い方


SQLエディタ

各ページ毎に複数のSQLを記述出来る

空白行において右△（再生）を押した場合は　→空白のクエリ　となる
実行されるSQLにカーソルを持ってきてから実行する





●テーブル確認、セット用
--Set all STATUS and DELETE

UPDATE ZW SET STATUS = 'TEST';

UPDATE ZW SET status = NULL;

実行結果確認
-- DISPLY

SELECT * FROM ZW;




●UPDATE用

##################
#　実際の実行用　#
##################

＊　２－１
UPDATE ZW
SET ZW.STATUS = (
SELECT TEST.STATUS
FROM TEST
WHERE
 TEST.CODE = ZW.CODE 
AND
 TEST.E123 = ZW.E123
)
WHERE E123 >= '003';

＊　２－２ ZW.E123 = 002
UPDATE ZW
SET ZW.STATUS = 'null'
WHERE
 ZW.STATUS IS NULL;


＊　２－３ ZW.STATUS = NULL
UPDATE ZW
SET ZW.STATUS = 'SHIP'
WHERE
 ZW.E123 = '002';


##################



●CASE、UPDATE　OK!



UPDATE ZW
SET ZW.STATUS = (
SELECT ZW.E123
FROM ZE  -- ←ここに　「,ZW」を書くとだめ　×単一行複問い合わせにより2つ以上の行が戻されます
WHERE
 ZE.CODE = ZW.CODE
AND
 ZE.E123 = ZW.E123
 )
 WHERE ZW.E123 IN 　　--　以降が無くてもOK！
(
SELECT ZW.E123
FROM ZE
WHERE
 ZE.CODE = ZW.CODE
AND
 ZE.E123 = ZW.E123
) ;



--UPDATE and CASE
--A and B are the same


-- SELECT ZW.CODE, 
--  CASE 
--   WHEN ZE.CODE=ZW.CODE AND ZE.E123=ZW.E123 THEN 'a'
--   ELSE 'bbb'
--   END AS aaa
-- FROM ZE, ZW;


--EXISTS(
--SELECT ZE.STATUS
 --FROM ZE, ZW
 --WHERE ZE.CODE = ZW.CODE AND ZE.E123 = ZW.E123
--) 




-- GOOD! 02
UPDATE ZW
SET ZW.STATUS = (
SELECT TEST.STATUS
FROM TEST
WHERE
 TEST.CODE = ZW.CODE
 AND
 TEST.E123 = ZW.E123
)
WHERE E123 >= '003';




●CASE　UPDATE　実行結果が想定外



UPDATE ZW
SET ZW.STATUS = (
CASE WHEN
  EXISTS (SELECT TEST.STATUS
  FROM TEST, ZW
  WHERE
  TEST.CODE = ZW.CODE
  )
  THEN 'same04'
  ELSE 'A'
END
)WHERE EXISTS (SELECT TEST.STATUS
  FROM TEST, ZW
  WHERE
  TEST.CODE = ZW.CODE
  );


●CASE使用　→でも　ダメ

-- NO GOOD  03 VALUE IS ...違う値が入ってしまう。。。
UPDATE ZW
SET ZW.STATUS = (
CASE WHEN
  EXISTS (SELECT TEST.CODE, TEST.STATUS
  FROM TEST, ZW
  WHERE
  TEST.CODE = ZW.CODE
  )
  THEN 'BBB'
  ELSE 'A'
END
);




●CASE練習



UPDATE ZW
SET ZW.STATUS = 'D' 
WHERE ZW.E123 IN (
SELECT ZW.E123
FROM ZE, ZW
WHERE
 ZE.CODE = ZW.CODE
AND
 ZE.E123 = ZW.E123
) 



SELECT ZW.CODE, 
 CASE 
  WHEN ZW.CODE='aaa' THEN 'a'
  ELSE 'bbb'
  END AS TEST
FROM ZW;

↑↓　同じ内容　CASEの後にあるかないか

SELECT ZW.CODE, 
 CASE ZW.CODE
  WHEN 'aaa' THEN 'a'
  ELSE 'bbb'
  END AS TEST
FROM ZW;






●CASE　ダメ


×　全部が'd'になってしまった

UPDATE ZW
SET ZW.STATUS =
 (
 CASE
 WHEN EXISTS(
 SELECT * 
 FROM ZE,ZW
 WHERE
 ZE.E123 = ZW.E123

 )THEN  'd'
  ELSE '___'
END
 )
 WHERE EXISTS(　--　←　これが有っても無くても同じ
 SELECT * 
 FROM ZE,ZW
 WHERE
 ZE.E123 = ZW.E123

 )



UPDATE ZW
SET STATUS = (
CASE
 WHEN 
 SELECT ZE.STATUS
 FROM ZE, ZW
 WHERE
   ZE.CODE = ZW.CODE AND ZE.E123 = ZW.E123 THEN 'bbb'
   ELSE 'a'
END
)

～～～～～～～～～～～～～～～

～～～～～～～～～～～～～～～














RDBで動的検索条件が必要な場合、動的SQLを利用すべき理由
https://www.nuits.jp/entry/2017/11/26/180319


Google先生
SQL CASE SELECT
https://www.google.com/search?q=SQL+CASE+SELECT&oq=sql+case+select+&aqs=chrome.0.69i59j69i61.8125j0j8&sourceid=chrome&ie=UTF-8
～～～～～～～～～～～～～～～～～～





●VIEW (CREATE VIEW)


-- ok!
-- create view use alias
CREATE VIEW TEST AS
SELECT ZW.CODE, ZW.E123, ZW.STATUS
FROM ZE
INNER JOIN ZW
ON
 ZE.CODE = ZW.CODE
AND
 ZE.E123 = ZW.E123


～～～～～～～～～～～～～～～～～～

●CASE SELECT


-- ok!
-- use alias
SELECT ZW.CODE,  ZW.E123,  
CASE ZW.E123
 WHEN '002' THEN 'AAA'
 WHEN '003' THEN 'BBB'
 ELSE '???'
END AS TEST
FROM ZW


●SELECT



-- ok!
SELECT ZW.CODE,  ZW.E123,  ZW.STATUS
FROM ZW
WHERE ZW.E123 = '002' OR ZW.E123 = '003'




--SELECT INNER JOIN ok!
--ZE.CODE=ZE.CODE 
--AND
--ZE.E123=ZW.E123
SELECT ZW.CODE,  ZE.E123, ZW.E123,  ZW.STATUS
FROM ZE
INNER JOIN ZW
ON
 ZE.CODE = ZW.CODE
AND
 ZE.E123 = ZW.E123



--SELECT , WHERE ok!
--ZE.CODE=ZE.CODE 
--AND
--ZE.E123=ZW.E123
SELECT ZW.CODE,  ZE.E123, ZW.E123,  ZW.STATUS
FROM ZE, ZW
WHERE
 ZE.CODE = ZW.CODE
AND
 ZE.E123 = ZW.E123


●UPDATE



@@@ 02 ×
--A and B are the same
UPDATE ZW
SET ZW.STATUS = 
(
CASE
WHEN
  ZE.CODE = ZW.CODE
 AND
  ZE.E123 = ZW.E123
THEN 'same'
ELSE 'not same'
END
)

@@@ 01 ×
--UPDATE and CASE
--A and B are the same
UPDATE ZW
SET ZW.STATUS = 
(
CASE ZE.E123
WHEN 
 SELECT ZE.STATUS
 FROM ZE,ZW
 WHERE
  ZE.CODE = ZW.CODE
 AND
  ZE.E123 = ZW.E123
 THEN 'same'
ELSE '...'
END
)



--UPDATE ok!
--A and B are the same
UPDATE ZW
SET ZW.STATUS = 
(
 SELECT ZE.STATUS
 FROM ZE
 WHERE
  ZE.CODE = ZW.CODE
 AND
  ZE.E123 = ZW.E123
)






--UPDATE
--Set all STATUS is test
UPDATE ZW
SET STATUS = 'TEST'


--UPDATE
--Delete all ZW.STATUS
UPDATE ZW
SET STATUS = NULL


～～～～～～～～～～～～～～～～～～

●メモ

UPDATE 
 テーブルB 
INNER JOIN ON テーブルA.a=テーブルB.a 
SET
 テーブルB.B='ア'
 WHERE (テーブルA.b='ア' AND テーブルB.b='イ');




UPDATE テーブルB
 SET テーブルB.B='ア'
 WHERE (テーブルB.a = (Select テーブルA.a From テーブルA where テーブルA.b='ア') as a)AND テーブルB.b='イ';





